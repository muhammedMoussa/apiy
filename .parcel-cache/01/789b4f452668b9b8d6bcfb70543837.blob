"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.apiy_core = void 0;

var _validators = require("../utils/validators");

var _headersHandler = require("../utils/headers-handler");

/*
   apiy_core function that takes options param
   to handle request on it..
*/

/* @TODO:
    - CUSTOME FUNCTIONS TO EVERY REQUEST.. -- DONE!
    - VALIDATE OPTIONS OBJECT, METHODS, HEADERS..
    - MOVE HELPERS FUNCTIONS OUT.. --DONE!
    - SMART HEADERS SETTING..
    - HANDLE CALLBACKS FUNCTIONS ONLOAD && ONERROR..
    - HANDLE LOADING BOOLEAN..
    - HANDLE CORS..
    - SUPPORT ES5
*/
const apiy_core = options => {
  if (!options.responseType || options.responseType && !(0, _validators.isValidResponseType)(options.responseType)) {
    options.responseType = 'json';
  }

  return new Promise((resolve, reject) => {
    const xhr = new XMLHttpRequest();
    xhr.open(options.method, options.url);
    xhr.responseType = options.responseType;

    if (options.body) {
      xhr.setRequestHeader('Content-Type', 'application/json');
    }

    (0, _headersHandler.headersHandler)(options.headers, xhr);

    xhr.onload = () => {
      if (xhr.status === 204) {
        resolve(xhr.status);
      } else if (xhr.status >= 400) {
        reject(xhr.response);
      } else {
        resolve(xhr.response);
      }
    };

    xhr.onerror = () => {
      reject('Something went wrong!');
    };

    xhr.send(JSON.stringify(options.body));
  });
};

exports.apiy_core = apiy_core;